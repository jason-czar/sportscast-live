version: '3.8'

services:
  telegram-streaming-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
    depends_on:
      - tdlib-service
      - webrtc-bridge
    restart: unless-stopped

  tdlib-service:
    build:
      context: ../docker
      dockerfile: Dockerfile.tdlib
    ports:
      - "8080:8080"
    environment:
      - TELEGRAM_API_ID=${TELEGRAM_API_ID}
      - TELEGRAM_API_HASH=${TELEGRAM_API_HASH}
      - ENVIRONMENT=production
    volumes:
      - tdlib_data:/app/data
      - tdlib_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  webrtc-bridge:
    build:
      context: ../docker
      dockerfile: Dockerfile.webrtc
    ports:
      - "8081:8081"
    environment:
      - ENVIRONMENT=production
      - FFMPEG_THREADS=4
      - MAX_CONCURRENT_STREAMS=10
      - LOG_LEVEL=info
    restart: unless-stopped
    depends_on:
      - tdlib-service
    volumes:
      - ffmpeg_logs:/app/logs

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - telegram-streaming-app
    restart: unless-stopped

volumes:
  tdlib_data:
  tdlib_logs:
  ffmpeg_logs: